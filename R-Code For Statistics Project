# Statictics_Project

## IMPORTING LIBRARIES
library(ggpubr)
pacman::p_load(pacman, rio) 
library(lessR)
library(psych)
library(Hmisc)
library(corrplot)
library (PerformanceAnalytics)
library(ggpubr)
library(ggplot2)
library(dplyr)
library(lattice)
library(caret)
library(lubridate)
library(pastecs)

## DATA LOADING
market_data<-import("C:\\Users\\User\\OneDrive\\문서\\datascience\\marketing.csv")



str(market_data)
dim(market_data)
column_name<-names(market_data)
column_name
missing_values <- colSums(is.na(market_data))
print(missing_values)


# Check for duplicate rows
duplicate_rows <- market_data[duplicated(market_data), ]


# Display duplicate rows
print("Duplicate Rows:")
print(duplicate_rows)


# Remove duplicate rows
market_data <- distinct(market_data)
market_data <- na.omit(market_data)
market_data$education_Status<-as.factor(market_data$education_Status)
market_data$marital_Status<-as.factor(market_data$marital_Status)
write.csv(heart_data, "cleaned_marketdata.csv", row.names = FALSE)
describe(market_data)
summary(market_data)


# mean
mean(market_data$Income)
median(market_data$Income)
var(market_data$Income)
sd(market_data$Income)
quantile(market_data$Income, 0.25)
quantile(market_data$Income, 0.50)
quantile(market_data$Income, 0.75)
IQR(market_data$Income)
summary(market_data$Income)


str(market_data$Income)



dt_income <- market_data$Income



# a. stem n leaf

stem(dt_income)
stem(dt_income, scale=0.5)

#
hist(market_data$Age)
hist(market_data$Income)
hist(market_data$Income, col = "green", xlab = "Income", main = "Income")
mean_income = mean(market_data$Income)

income_stats <- market_data |>
  summarize(mean_income)
income_stats
ggplot(market_data, aes(x = Income, y = after_stat(density))) +
  geom_histogram(color = "white", fill = "blue", bins = 20) +
  geom_vline(aes(xintercept = mean_income), income_stats, color = "red", linewidth = 1) +
  geom_density(color = "green", linewidth = 1, alpha=.3, fill="pink")
####################### ggplot2 Income #############

mean_Age = mean(market_data$Age)

Age_stats <- market_data |>
  summarize(mean_Age)
Age_stats

ggplot(market_data, aes(x = Age)) +
  geom_histogram(color = "white", fill = "skyblue", bins = 20) +
  geom_vline(aes(xintercept = mean_Age), Age_stats, color = "red", linewidth = 1)


ggplot(market_data, aes(x = Age, y = after_stat(density))) +
  geom_histogram(color = "white", fill = "skyblue", bins = 20) +
  geom_vline(aes(xintercept = mean_Age), Age_stats, color = "red", linewidth = 1) +
  geom_density(color = "pink", linewidth = 1, alpha=.3, fill="pink")
####################### ggplot2 Age #############

table(market_data$marital_Status)
BarChart(marital_Status,data = market_data)

barplot(table(market_data$Age), col="blue", xlab = "Age", ylab = "Count", main = "Numbr of Customer's Age", )
hist(table(market_data$Age), col = "skyblue", xlab = "Age", ylab = "Count", main = "Numbr of Customer's Age")

boxplot(
  table(market_data$marital_Status),
  main="Marital Status", 
  col = "darkblue", 
  xlab="Variable", 
  ylab="Values",
  border = "red")


boxplot(
  market_data$Income,
  main="Income", 
  col = "darkblue", 
  xlab="Variable", 
  ylab="Values",
  border = "red"
)
boxplot(
  market_data$Age,
  main="Income", 
  col = "darkblue", 
  xlab="Variable", 
  ylab="Values",
  border = "red"
)



#  Pie chart for marital status
PieChart(marital_Status,data=market_data)

################### BarChart for Educational Status ###############
BarChart(education_Status,data=market_data)
############################
describe(market_data)
######################## some Hypothesis TesT##############
# H0: The mean total spending is the same for customers who responded and those who did not respond.
# H1: There is a significant difference in mean total spending between the two groups.

responded_data <- market_data$MntTotal[market_data$Response == 1]
not_responded_data <- market_data$MntTotal[market_data$Response == 0]

# Perform an independent two-sample t-test
t_test_result <- t.test(responded_data, not_responded_data)

# Display the results
print(t_test_result)
#######
# H0: The mean total spending is the same for married and single customers.
# H1: There is a significant difference in mean total spending between married and single customers.

married_data <- market_data$MntTotal[market_data$marital_Status == "married"]
single_data <- market_data$MntTotal[market_data$marital_Status == "single"]



# Perform an independent two-sample t-test
t_test_result <- t.test(married_data, single_data)

print(t_test_result)
########
# H0: The mean total spending is the same for customers with Ph.D. and those with graduation education.
# H1: There is a significant difference in mean total spending between customers with Ph.D. and those with graduation education.

phd_data <- market_data$MntTotal[market_data$education_Status == "phd"]
graduation_data <- market_data$MntTotal[market_data$education_Status == "graduation"]

# Perform an independent two-sample t-test
t_test_result <- t.test(phd_data, graduation_data)

# Display the results
print(t_test_result)
##########################
# H0: The mean total spending is the same for customers who complained and those who did not complain.
# H1: There is a significant difference in mean total spending between the two groups.



# Subset the data
complained_data <- market_data$MntTotal[market_data$Complain == 1]
not_complained_data <- market_data$MntTotal[market_data$Complain == 0]

# Perform an independent two-sample t-test
t_test_result <- t.test(complained_data, not_complained_data)

# Display the results
print(t_test_result)

### ####
library(corrplot)
numeric_data <- market_data[, sapply(market_data, is.numeric)]
cor_matrix <- cor(numeric_data)

# Increase plot size and adjust parameters for readability
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))
corrplot(cor_matrix, 
         method = "circle", 
         type = "upper", 
         tl.col = "black", 
         tl.srt = 45, 
         tl.cex = 0.7,  # Adjust the font size
         diag = FALSE,
         col = colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))(100))  # Adjust color intensity





## ######
# Assuming 'Response' and 'Complain' are categorical variables

# Create a contingency table
contingency_table <- table(market_data$Response, market_data$Complain)

# Perform Chi-square test of independence
chi_square_result <- chisq.test(contingency_table)

# Display the results
print(chi_square_result)
########
library(corrplot)

# Select only numeric columns for correlation calculation
numeric_data <- market_data[, sapply(market_data, is.numeric)]

# Calculate the correlation matrix
correlation_matrix <- cor(numeric_data)

# Plot the heatmap of the correlation matrix using corrplot
corrplot(correlation_matrix, method = "color", type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
##########
# Assuming you want to predict 'MntTotal' (total spending) based on other variables

# Fit a linear regression model
lm_model <- lm(MntTotal ~ ., data = market_data)

# Display a summary of the regression model
summary(lm_model)
########





# Assuming you want to predict 'MntTotal' based on other variables

# Fit a linear regression model
lm_model <- lm(MntTotal ~ Income + Kidhome + Teenhome + Recency + MntWines + MntFruits + MntMeatProducts + MntFishProducts + MntSweetProducts + MntGoldProds + NumDealsPurchases + NumWebPurchases + NumCatalogPurchases + NumStorePurchases + NumWebVisitsMonth + Age + Customer_Days, data = market_data)

# Display a summary of the regression model
summary(lm_model)
#########
# Assuming you want to test the impact of the 'education_Status' variable on 'MntTotal'

# Fit an ANOVA model
anova_model <- aov(MntTotal ~ education_Status, data = market_data)

# Display a summary of the ANOVA model
summary(anova_model)
####

# Assuming you want to test the impact of the 'marital_Status' variable on 'MntTotal'

# Fit an ANOVA model
anova_model <- aov(MntTotal ~ marital_Status, data = market_data)

# Display a summary of the ANOVA model
summary(anova_model)
## ## ## ## ## ## ##
